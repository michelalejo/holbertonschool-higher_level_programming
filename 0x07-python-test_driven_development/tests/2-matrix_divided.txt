The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

This is an example text file in reStructuredText format.  First import
``matrix_divided`` from the ``2-matrix_divided`` module:

    >>> tester = __import__('2-matrix_divided')

Now use it:

    >>> matrix = [ 
    ...     [1, 2, 3], 
    ...     [4, 5, 6] 
    ... ] 

    >>> tester.matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> tester.matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> tester.matrix_divided(matrix, "hola")
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix = [ 
    ...     [1, 2, 3], 
    ...     [4, 5, 'n'] 
    ... ]   

    >>> tester.matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [ 
    ...     [1, 2, 3], 
    ...     [4, 5, 6, 7, 8] 
    ... ]

    >>> tester.matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> tester.matrix_divided([[3, 8], [12, 11]], -3)
    [[-1.0, -2.67], [-4.0, -3.67]]

    >>> tester.matrix_divided(None, 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    
    >>> tester.matrix_divided([[-1.0, -2.67], [-4.0, -3.67]], float('inf'))
    [[0.0, 0.0], [0.0, 0.0]]

    >>> tester.matrix_divided(None, None)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats
